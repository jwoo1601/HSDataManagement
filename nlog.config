<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Info"
      internalLogFile="${basedir}/Logs/Internal/nlog-internal.log">

  <!-- enable asp.net core layout renderers -->
  <extensions>
    <add assembly="NLog.Web.AspNetCore" />
    <add assembly="NLog.Slack" />
    <add assembly="NLog.AWS.Logger" />
    <add assembly="NLog.Mongo" />
  </extensions>

  <!-- the targets to write to -->
  <targets async="true">
    <!-- write logs to file  -->
    <target xsi:type="File" name="file-all" fileName="${basedir}/Logs/hsm-all-${shortdate}.log"
            layout="[${longdate}][${lowercase:${level}}](event: ${event-properties:item=EventId_Id}) ${logger}: ${message} (exception: ${exception:format=tostring})"
            keepFileOpen="false"
            archiveFileName="${basedir}/Logs/Archives/hsm-all-{#}.log"
            archiveNumbering="DateAndSequence"
            archiveDateFormat="yyyy-MM-dd"
            archiveAboveSize="10240000"
            maxArchiveFiles="14"
            encoding="utf-8" />
    <!-- limits file size to 10MB -->

    <!-- another file log, only own logs. Uses some ASP.NET core renderers -->
    <target xsi:type="File" name="file-own" fileName="${basedir}/Logs/hsm-own-${shortdate}.log"
            layout="[${longdate}][${lowercase:${level}}](event: ${event-properties:item=EventId_Id}) ${logger}: ${message} (exception: ${exception:format=tostring}) (url: ${aspnet-request-url}) (action: ${aspnet-mvc-action})"
            keepFileOpen="false"
            archiveFileName="${basedir}/Logs/Archives/hsm-own-{#}.log"
            archiveNumbering="DateAndSequence"
            archiveDateFormat="yyyy-MM-dd"
            archiveAboveSize="102400000"
            maxArchiveFiles="30"
            encoding="utf-8" />
    <!-- limits file size to 10MB -->

    <target xsi:type="Console" name="lifetimeConsole"
            layout="${level:truncate=4:tolower=true}\: ${logger}[0]${newline}      ${message}"/>

    <target xsi:type="Slack" name="slack-production-logs"
            layout="[${longdate}] ${message}" compact="false"
            webHookUrl="Removed due to security concerns">
      <field name="Machine Name" layout="${machinename}" />
      <field name="Process Name" layout="${processname}" />
      <field name="Process ID" layout="${processid}" />
    </target>

    <target xsi:type="Slack" name="slack-fatal-alarm"
        layout="[${longdate}] ${message}" compact="false"
        webHookUrl="Removed due to security concerns">
      <field name="Machine Name" layout="${machinename}" />
      <field name="Process Name" layout="${processname}" />
      <field name="Process ID" layout="${processid}" />
    </target>

    <!-- AWS CloudWatch -->
    <target xsi:type="AWSTarget" name="aws-cloudwatch-production"
            logGroup="/ecs/HyosungManagement/HyosungManagement" region="ap-northeast-2" />

    <!-- MongoDB Atlas-->
    <target xsi:type="Mongo" name="mongodb-production"
            connectionString="Removed due to security concerns"
            collectionName="all-logs" cappedCollectionSize="256000000" includeDefaults="true" >
      <field name="Props" bsonType="Object">
        <layout type="JsonLayout" includeAllProperties="true" includeMdlc="true" maxRecursionLimit="5">
          <attribute name="ThreadID" layout="${threadid}" encode="false" />
          <attribute name="ProcessID" layout="${processid}" encode="false" />
          <attribute name="ProcessName" layout="${processname:fullName=false}" />
        </layout>
      </field>

      <field name="Web" bsonType="Object">
        <layout type="JsonLayout" includeAllProperties="false" includeMdlc="false" maxRecursionLimit="3">
          <attribute name="RequestUrl" layout="${aspnet-request-url:IncludeQueryString=true}" encode="false" />
          <attribute name="RequestIP" layout="${aspnet-request-ip}" encode="false" />
          <attribute name="RequestMethod" layout="${aspnet-request-method}" encode="false" />
          <attribute name="UserAgent" layout="${aspnet-request-useragent}" encode="false" />
          <attribute name="AccessToken" layout="${aspnet-request:header=Authorization}" encode="false" />
          <attribute name="User" layout="${aspnet-user-identity}" />
        </layout>
      </field>
    </target>
  </targets>

  <!-- rules to map from logger name to target -->
  <rules>
    <!--All logs, including from Microsoft-->
    <logger name="*" minlevel="Trace" writeTo="file-all" />
    <!-- Only logs "important" messages to slack -->
    <logger name="*" minlevel="Info" maxlevel="Error" writeTo="slack-production-logs" />
    <logger name="*" minlevel="Info" writeTo="aws-cloudwatch-production" />
    <!-- Detailed logging to MongoDB-->
    <logger name="Microsoft.AspNetCore.*" minlevel="Trace" writeTo="mongodb-production" />
    <logger name="HyosungManagement.Controllers.*" minlevel="Trace" writeTo="mongodb-production" />
    <!--Skip non-critical Microsoft logs and so log only own logs-->
    <logger name="Microsoft.*" maxlevel="Info" final="true" />
    <logger name="Microsoft.Hosting.Lifetime" level="Info" writeTo="lifetimeConsole, aws-cloudwatch-production, file-own" final="true" />
    <!-- BlackHole without writeTo -->
    <logger name="*" minlevel="Trace" writeTo="file-own" />
    <!-- Logs fatal errors to a diffrent channel on slack -->
    <logger name="*" minlevel="Fatal" writeTo="slack-fatal-alarm" />
  </rules>
</nlog>